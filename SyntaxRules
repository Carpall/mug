Language Standards:
   - Native Compiled (Assembly x86-86)
   - Compile To Object Using `as`
   - Linking Using `ld`
   - Structure:
      - Lexer(Code) -> Tokens
      - Parser(Tokens) -> Ast
      - CodeGenerator(Ast) -> Assembly
        |__ Emitter() -> Generating Services
Syntax Rules:
   - Naming Conventions -> Lower Case (`system::string`)
   - Examples ->
      ```
      use system
      void main(systsem::array args) {
         try int16 x = args[0] catch int16 x = 0
         if x == 0 {
            system::print("It's not a number!")
         } elif x == 10 {
            system::print("You will never see this print!")
         } else {
            system::print("It's a number!")
         }
         for int16 i = 0, i<x, i++ {
            system::print( system::string::format("i: .0", i) )
         }
         # assing to a variable a value not declared in the function's type, but unsafe property allow ambiguos situations
         int var = func()
         # loop
         main([0])
      }
      [unsafe] void func() {
         asm "mov eax, 100"
      }
      ```