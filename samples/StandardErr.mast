NamespaceNode: {
   Name: {
     Literal: {
        Kind: Identifier,
        Value: global
     }
   },
   ImportDirective: {
      Mode: FromPackages,
      Member: {
         Literal: {
            Kind: Identifier,
            Value: std
         }
      }
   },
   UseDirective: {
      Mode: UsingNamespace,
      Alias: {
         Literal: {
            Kind: Bad,
            Value: 
         }
      },
      Member: {
         MemberNode: {
            Base: {
               Literal: {
                  Kind: Identifier,
                  Value: std
               }
            },
            Members: {
               Literal: {
                  Kind: Identifier,
                  Value: io
               }
            }
         }
      }
   },
   VariableStatement: {
      Type:          Literal: {
            Kind: Identifier,
            Value: IO
         },
      Name: Mug.Models.Lexer.Token,
      IsAssigned: True,
      Body: {
         CallStatement: {
            Name: {
               Literal: {
                  Kind: Identifier,
                  Value: IO
               }
            },
            Parameters: {

            },
            IsGeneric: False
         }
      }
   },
   NamespaceNode: {
      Name: {
        MemberNode: {
           Base: {
              Literal: {
                 Kind: Identifier,
                 Value: std
              }
           },
           Members: {
              Literal: {
                 Kind: Identifier,
                 Value: err
              }
           }
        }
      },
      TypeStatement: {
         Name: Err,
         Body: {
            FieldNode: {
               Name: err,
               Modifier: Private,
               Type: {
                  Literal: {
                     Kind: KeyTbool,
                     Value: 
                  }
               }
            },
            FieldNode: {
               Name: kind,
               Modifier: Private,
               Type: {
                  Literal: {
                     Kind: KeyTu8,
                     Value: 
                  }
               }
            },
            FieldNode: {
               Name: message,
               Modifier: Private,
               Type: {
                  Literal: {
                     Kind: KeyTstr,
                     Value: 
                  }
               }
            },
            FieldNode: {
               Name: result,
               Modifier: Private,
               Type: {
                  Literal: {
                     Kind: Identifier,
                     Value: ResultType
                  }
               }
            },

         },
         IsGeneric: True,
         GenericType: {
                        Literal: {
               Kind: Identifier,
               Value: ResultType
            },
         }
      },
      FunctionNode: {
         IsMethod: False,
         Type: {
            Literal: {
               Kind: KeyTgeneric,
               Value: {
                  Literal: {
                     Kind: Identifier,
                     Value: ResultType
                  }
               }
            }
         },
         Name: Bad,
         Modifier: Public,
         ParameterList: {
            ParameterListNode: {
               Parameter[0] {
                  Type: {
                     Literal: {
                        Kind: KeyTu8,
                        Value: 
                     }
                  },
                  Name: kind,
                  IsSelf: False,
                  DefaultConstantValue: {
                     Literal: {
                        Kind: Bad,
                        Value: 
                     }
                  }
               },
               Parameter[1] {
                  Type: {
                     Literal: {
                        Kind: KeyTstr,
                        Value: 
                     }
                  },
                  Name: error_msg,
                  IsSelf: False,
                  DefaultConstantValue: {
                     Literal: {
                        Kind: Bad,
                        Value: 
                     }
                  }
               },
            }
         },
         IsGeneric: True,
         GenericType: {
            Literal: {
               Kind: Identifier,
               Value: ResultType
            },
         },
         Body: {
            BlockNode: {
               Statement[0] {
                  ReturnStatement: {
                     Body: {
                        TypeAllocationNode: {
                           Name: {
                              Literal: {
                                 Kind: KeyTgeneric,
                                 Value: {
                                    Literal: {
                                       Kind: Identifier,
                                       Value: ResultType
                                    }
                                 }
                              }
                           },
                           Body: {
                              FieldAssign[0] {
                                 FieldAssignNode: {
                                    Name: err,
                                    Body: {
                                       Literal: {
                                          Kind: ConstantBoolean,
                                          Value: true
                                       }
                                    }
                                 }
                              },
                              FieldAssign[1] {
                                 FieldAssignNode: {
                                    Name: kind,
                                    Body: {
                                       Literal: {
                                          Kind: Identifier,
                                          Value: kind
                                       }
                                    }
                                 }
                              },
                              FieldAssign[2] {
                                 FieldAssignNode: {
                                    Name: message,
                                    Body: {
                                       Literal: {
                                          Kind: Identifier,
                                          Value: error_msg
                                       }
                                    }
                                 }
                              },

                           }
                        }
                     }
                  }
               },
            }
         }
      },
      FunctionNode: {
         IsMethod: False,
         Type: {
            Literal: {
               Kind: KeyTgeneric,
               Value: {
                  Literal: {
                     Kind: Identifier,
                     Value: ResultType
                  }
               }
            }
         },
         Name: Good,
         Modifier: Public,
         ParameterList: {
            ParameterListNode: {
               Parameter[0] {
                  Type: {
                     Literal: {
                        Kind: Identifier,
                        Value: ResultType
                     }
                  },
                  Name: result,
                  IsSelf: False,
                  DefaultConstantValue: {
                     Literal: {
                        Kind: Bad,
                        Value: 
                     }
                  }
               },
            }
         },
         IsGeneric: True,
         GenericType: {
            Literal: {
               Kind: Identifier,
               Value: ResultType
            },
         },
         Body: {
            BlockNode: {
               Statement[0] {
                  ReturnStatement: {
                     Body: {
                        TypeAllocationNode: {
                           Name: {
                              Literal: {
                                 Kind: KeyTgeneric,
                                 Value: {
                                    Literal: {
                                       Kind: Identifier,
                                       Value: ResultType
                                    }
                                 }
                              }
                           },
                           Body: {
                              FieldAssign[0] {
                                 FieldAssignNode: {
                                    Name: err,
                                    Body: {
                                       Literal: {
                                          Kind: ConstantBoolean,
                                          Value: false
                                       }
                                    }
                                 }
                              },
                              FieldAssign[1] {
                                 FieldAssignNode: {
                                    Name: result,
                                    Body: {
                                       Literal: {
                                          Kind: Identifier,
                                          Value: result
                                       }
                                    }
                                 }
                              },

                           }
                        }
                     }
                  }
               },
            }
         }
      },
      FunctionNode: {
         IsMethod: True,
         Type: {
            Literal: {
               Kind: Identifier,
               Value: ResultType
            }
         },
         Name: discard,
         Modifier: Public,
         ParameterList: {
            ParameterListNode: {
               Parameter[0] {
                  Type: {
                     Literal: {
                        Kind: KeyTgeneric,
                        Value: {
                           Literal: {
                              Kind: Identifier,
                              Value: ResultType
                           }
                        }
                     }
                  },
                  Name: self,
                  IsSelf: True,
                  DefaultConstantValue: {
                     Literal: {
                        Kind: Bad,
                        Value: 
                     }
                  }
               },
            }
         },
         IsGeneric: False,
         Body: {
            BlockNode: {
               Statement[0] {
                  ConditionalStatement: {
                     Kind: KeyIf,
                     Expression: {
                        MemberNode: {
                           Base: {
                              Literal: {
                                 Kind: KeySelf,
                                 Value: 
                              }
                           },
                           Members: {
                              Literal: {
                                 Kind: Identifier,
                                 Value: err
                              }
                           }
                        }
                     },
                     Body: {
                        BlockNode: {
                           Statement[0] {
                              CallStatement: {
                                 Name: {
                                    MemberNode: {
                                       Base: {
                                          Literal: {
                                             Kind: Identifier,
                                             Value: io
                                          }
                                       },
                                       Members: {
                                          Literal: {
                                             Kind: Identifier,
                                             Value: println
                                          }
                                       }
                                    }
                                 },
                                 Parameters: {
                                    ExpressionNode: {
                                       Operator: Sum,
                                       Left: {
                                          ExpressionNode: {
                                             Operator: Sum,
                                             Left: {
                                                ExpressionNode: {
                                                   Operator: Sum,
                                                   Left: {
                                                      Literal: {
                                                         Kind: ConstantString,
                                                         Value: "Panic: "
                                                      }
                                                   },
                                                   Right: {
                                                       MemberNode: {
                                                          Base: {
                                                             Literal: {
                                                                Kind: KeySelf,
                                                                Value: 
                                                             }
                                                          },
                                                          Members: {
                                                             Literal: {
                                                                Kind: Identifier,
                                                                Value: message
                                                             }
                                                          }
                                                       }
                                                   }
                                                }
                                             },
                                             Right: {
                                                 Literal: {
                                                    Kind: ConstantString,
                                                    Value: ". Exit code: "
                                                 }
                                             }
                                          }
                                       },
                                       Right: {
                                           MemberNode: {
                                              Base: {
                                                 Literal: {
                                                    Kind: KeySelf,
                                                    Value: 
                                                 }
                                              },
                                              Members: {
                                                 Literal: {
                                                    Kind: Identifier,
                                                    Value: kind
                                                 }
                                              }
                                           }
                                       }
                                    },

                                 },
                                 IsGeneric: False
                              }
                           },
                           Statement[1] {
                              CallStatement: {
                                 Name: {
                                    MemberNode: {
                                       Base: {
                                          Literal: {
                                             Kind: Identifier,
                                             Value: sys
                                          }
                                       },
                                       Members: {
                                          Literal: {
                                             Kind: Identifier,
                                             Value: crash
                                          }
                                       }
                                    }
                                 },
                                 Parameters: {
                                    MemberNode: {
                                       Base: {
                                          Literal: {
                                             Kind: KeySelf,
                                             Value: 
                                          }
                                       },
                                       Members: {
                                          Literal: {
                                             Kind: Identifier,
                                             Value: kind
                                          }
                                       }
                                    },

                                 },
                                 IsGeneric: False
                              }
                           },
                        }
                     }
                  }
               },
               Statement[1] {
                  ReturnStatement: {
                     Body: {
                        MemberNode: {
                           Base: {
                              Literal: {
                                 Kind: KeySelf,
                                 Value: 
                              }
                           },
                           Members: {
                              Literal: {
                                 Kind: Identifier,
                                 Value: result
                              }
                           }
                        }
                     }
                  }
               },
            }
         }
      },
      FunctionNode: {
         IsMethod: True,
         Type: {
            Literal: {
               Kind: KeyTbool,
               Value: 
            }
         },
         Name: is_err,
         Modifier: Public,
         ParameterList: {
            ParameterListNode: {
               Parameter[0] {
                  Type: {
                     Literal: {
                        Kind: KeyTgeneric,
                        Value: {
                           Literal: {
                              Kind: Identifier,
                              Value: ResultType
                           }
                        }
                     }
                  },
                  Name: self,
                  IsSelf: True,
                  DefaultConstantValue: {
                     Literal: {
                        Kind: Bad,
                        Value: 
                     }
                  }
               },
            }
         },
         IsGeneric: False,
         Body: {
            BlockNode: {
               Statement[0] {
                  ReturnStatement: {
                     Body: {
                        MemberNode: {
                           Base: {
                              Literal: {
                                 Kind: KeySelf,
                                 Value: 
                              }
                           },
                           Members: {
                              Literal: {
                                 Kind: Identifier,
                                 Value: err
                              }
                           }
                        }
                     }
                  }
               },
            }
         }
      },
      FunctionNode: {
         IsMethod: True,
         Type: {
            Literal: {
               Kind: KeyTstr,
               Value: 
            }
         },
         Name: error,
         Modifier: Public,
         ParameterList: {
            ParameterListNode: {
               Parameter[0] {
                  Type: {
                     Literal: {
                        Kind: KeyTgeneric,
                        Value: {
                           Literal: {
                              Kind: Identifier,
                              Value: ResultType
                           }
                        }
                     }
                  },
                  Name: self,
                  IsSelf: True,
                  DefaultConstantValue: {
                     Literal: {
                        Kind: Bad,
                        Value: 
                     }
                  }
               },
            }
         },
         IsGeneric: False,
         Body: {
            BlockNode: {
               Statement[0] {
                  ReturnStatement: {
                     Body: {
                        MemberNode: {
                           Base: {
                              Literal: {
                                 Kind: KeySelf,
                                 Value: 
                              }
                           },
                           Members: {
                              Literal: {
                                 Kind: Identifier,
                                 Value: message
                              }
                           }
                        }
                     }
                  }
               },
            }
         }
      },
      FunctionNode: {
         IsMethod: True,
         Type: {
            Literal: {
               Kind: KeyTu8,
               Value: 
            }
         },
         Name: kind,
         Modifier: Public,
         ParameterList: {
            ParameterListNode: {
               Parameter[0] {
                  Type: {
                     Literal: {
                        Kind: KeyTgeneric,
                        Value: {
                           Literal: {
                              Kind: Identifier,
                              Value: ResultType
                           }
                        }
                     }
                  },
                  Name: self,
                  IsSelf: True,
                  DefaultConstantValue: {
                     Literal: {
                        Kind: Bad,
                        Value: 
                     }
                  }
               },
            }
         },
         IsGeneric: False,
         Body: {
            BlockNode: {
               Statement[0] {
                  ReturnStatement: {
                     Body: {
                        MemberNode: {
                           Base: {
                              Literal: {
                                 Kind: KeySelf,
                                 Value: 
                              }
                           },
                           Members: {
                              Literal: {
                                 Kind: Identifier,
                                 Value: kind
                              }
                           }
                        }
                     }
                  }
               },
            }
         }
      },
      TypeStatement: {
         Name: Err,
         Body: {
            FieldNode: {
               Name: err,
               Modifier: Private,
               Type: {
                  Literal: {
                     Kind: KeyTbool,
                     Value: 
                  }
               }
            },
            FieldNode: {
               Name: kind,
               Modifier: Private,
               Type: {
                  Literal: {
                     Kind: KeyTu8,
                     Value: 
                  }
               }
            },
            FieldNode: {
               Name: message,
               Modifier: Private,
               Type: {
                  Literal: {
                     Kind: KeyTstr,
                     Value: 
                  }
               }
            },

         },
         IsGeneric: False
      },
      FunctionNode: {
         IsMethod: False,
         Type: {
            Literal: {
               Kind: Identifier,
               Value: Err
            }
         },
         Name: Bad,
         Modifier: Public,
         ParameterList: {
            ParameterListNode: {
               Parameter[0] {
                  Type: {
                     Literal: {
                        Kind: KeyTu8,
                        Value: 
                     }
                  },
                  Name: kind,
                  IsSelf: False,
                  DefaultConstantValue: {
                     Literal: {
                        Kind: Bad,
                        Value: 
                     }
                  }
               },
               Parameter[1] {
                  Type: {
                     Literal: {
                        Kind: KeyTstr,
                        Value: 
                     }
                  },
                  Name: error_msg,
                  IsSelf: False,
                  DefaultConstantValue: {
                     Literal: {
                        Kind: Bad,
                        Value: 
                     }
                  }
               },
            }
         },
         IsGeneric: False,
         Body: {
            BlockNode: {
               Statement[0] {
                  ReturnStatement: {
                     Body: {
                        TypeAllocationNode: {
                           Name: {
                              Literal: {
                                 Kind: Identifier,
                                 Value: Err
                              }
                           },
                           Body: {
                              FieldAssign[0] {
                                 FieldAssignNode: {
                                    Name: err,
                                    Body: {
                                       Literal: {
                                          Kind: ConstantBoolean,
                                          Value: true
                                       }
                                    }
                                 }
                              },
                              FieldAssign[1] {
                                 FieldAssignNode: {
                                    Name: kind,
                                    Body: {
                                       Literal: {
                                          Kind: Identifier,
                                          Value: kind
                                       }
                                    }
                                 }
                              },
                              FieldAssign[2] {
                                 FieldAssignNode: {
                                    Name: message,
                                    Body: {
                                       Literal: {
                                          Kind: Identifier,
                                          Value: error_msg
                                       }
                                    }
                                 }
                              },

                           }
                        }
                     }
                  }
               },
            }
         }
      },
      FunctionNode: {
         IsMethod: False,
         Type: {
            Literal: {
               Kind: Identifier,
               Value: Err
            }
         },
         Name: Good,
         Modifier: Public,
         ParameterList: {
            ParameterListNode: {
            }
         },
         IsGeneric: False,
         Body: {
            BlockNode: {
               Statement[0] {
                  ReturnStatement: {
                     Body: {
                        TypeAllocationNode: {
                           Name: {
                              Literal: {
                                 Kind: Identifier,
                                 Value: Err
                              }
                           },
                           Body: {
                              FieldAssign[0] {
                                 FieldAssignNode: {
                                    Name: err,
                                    Body: {
                                       Literal: {
                                          Kind: ConstantBoolean,
                                          Value: false
                                       }
                                    }
                                 }
                              },

                           }
                        }
                     }
                  }
               },
            }
         }
      },
      FunctionNode: {
         IsMethod: True,
         Type: {
            Literal: {
               Kind: KeyTbool,
               Value: 
            }
         },
         Name: is_err,
         Modifier: Public,
         ParameterList: {
            ParameterListNode: {
               Parameter[0] {
                  Type: {
                     Literal: {
                        Kind: Identifier,
                        Value: Err
                     }
                  },
                  Name: self,
                  IsSelf: True,
                  DefaultConstantValue: {
                     Literal: {
                        Kind: Bad,
                        Value: 
                     }
                  }
               },
            }
         },
         IsGeneric: False,
         Body: {
            BlockNode: {
               Statement[0] {
                  ReturnStatement: {
                     Body: {
                        MemberNode: {
                           Base: {
                              Literal: {
                                 Kind: KeySelf,
                                 Value: 
                              }
                           },
                           Members: {
                              Literal: {
                                 Kind: Identifier,
                                 Value: err
                              }
                           }
                        }
                     }
                  }
               },
            }
         }
      },
      FunctionNode: {
         IsMethod: True,
         Type: {
            Literal: {
               Kind: KeyTstr,
               Value: 
            }
         },
         Name: error,
         Modifier: Public,
         ParameterList: {
            ParameterListNode: {
               Parameter[0] {
                  Type: {
                     Literal: {
                        Kind: Identifier,
                        Value: Err
                     }
                  },
                  Name: self,
                  IsSelf: True,
                  DefaultConstantValue: {
                     Literal: {
                        Kind: Bad,
                        Value: 
                     }
                  }
               },
            }
         },
         IsGeneric: False,
         Body: {
            BlockNode: {
               Statement[0] {
                  ReturnStatement: {
                     Body: {
                        MemberNode: {
                           Base: {
                              Literal: {
                                 Kind: KeySelf,
                                 Value: 
                              }
                           },
                           Members: {
                              Literal: {
                                 Kind: Identifier,
                                 Value: message
                              }
                           }
                        }
                     }
                  }
               },
            }
         }
      },
      FunctionNode: {
         IsMethod: True,
         Type: {
            Literal: {
               Kind: KeyTu8,
               Value: 
            }
         },
         Name: kind,
         Modifier: Public,
         ParameterList: {
            ParameterListNode: {
               Parameter[0] {
                  Type: {
                     Literal: {
                        Kind: Identifier,
                        Value: Err
                     }
                  },
                  Name: self,
                  IsSelf: True,
                  DefaultConstantValue: {
                     Literal: {
                        Kind: Bad,
                        Value: 
                     }
                  }
               },
            }
         },
         IsGeneric: False,
         Body: {
            BlockNode: {
               Statement[0] {
                  ReturnStatement: {
                     Body: {
                        MemberNode: {
                           Base: {
                              Literal: {
                                 Kind: KeySelf,
                                 Value: 
                              }
                           },
                           Members: {
                              Literal: {
                                 Kind: Identifier,
                                 Value: kind
                              }
                           }
                        }
                     }
                  }
               },
            }
         }
      },

   },

}